- name: Deploy Kubernetes objects for chater application
  hosts: localhost
  gather_facts: no

  vars_files:
    - ../vars.yaml

  tasks:
    - name: Create chater Namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: chater-ui
    - name: Deploy chater Deployment
      kubernetes.core.k8s:
        state: present
        namespace: chater-ui
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: chater-ui
            namespace: chater-ui
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: chater-ui
            template:
              metadata:
                labels:
                  app: chater-ui
              spec:
                containers:
                  - name: chater-ui
                    image: docker.io/singularis314/chater-ui:0.4
                    imagePullPolicy: Always
                    ports:
                      - containerPort: 5000
                        name: chater-ui
                    volumeMounts:
                      - name: chater-ui-pvc
                        mountPath: /app/data
                      - name: gphoto-chater-ui-pvc
                        mountPath: /app/app/static/
                      - name: eater-ui-pvc
                        mountPath: /app/eater_storage
                    env:
                      - name: USERNAME
                        valueFrom:
                          secretKeyRef:
                            name: chater-ui
                            key: USERNAME
                      - name: PASSWORD_HASH
                        valueFrom:
                          secretKeyRef:
                            name: chater-ui
                            key: PASSWORD_HASH
                      - name: SECRET_KEY
                        valueFrom:
                          secretKeyRef:
                            name: chater-ui
                            key: SECRET_KEY
                      - name: GOOGLE_APPLICATION_CREDENTIALS
                        value: /var/secrets/google/service-account.json
                      - name: SESSION_LIFETIME
                        value: "{{ vars.SESSION_LIFETIME }}"
                      - name: GCP_PROJECT_ID
                        value: "{{ vars.GCP_PROJECT_ID }}"
                      - name: BOOTSTRAP_SERVER
                        value: "{{ vars.BOOTSTRAP_SERVER }}"
                      - name: GOOGLE_OAUTH_CLIENT_ID
                        value: "{{ vars.GOOGLE_OAUTH_CLIENT_ID }}"
                      - name: GOOGLE_OAUTH_CLIENT_SECRET
                        value: "{{ vars.GOOGLE_OAUTH_CLIENT_SECRET }}"
                      - name: ALLOWED_EMAILS
                        value: "{{ vars.ALLOWED_EMAILS }}"
                      - name: EATER_SECRET_KEY
                        value: "{{ vars.EATER_SECRET_KEY }}"
                volumes:
                  - name: chater-ui-pvc
                    persistentVolumeClaim:
                      claimName: chater-ui-pvc
                  - name: gphoto-chater-ui-pvc
                    persistentVolumeClaim:
                      claimName: gphoto-chater-ui-pvc
                  - name: eater-ui-pvc
                    persistentVolumeClaim:
                      claimName: eater-ui-pvc
    - name: Create chater Service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: chater-ui
            namespace: chater-ui
          spec:
            ports:
              - port: 5000
                targetPort: 5000
                nodePort: 30600
            selector:
              app: chater-ui
            type: NodePort

    - name: Create chater PersistentVolume
      kubernetes.core.k8s:
        state: present
        namespace: chater-ui
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: chater-ui-pv
            namespace: chater-ui
          spec:
            capacity:
              storage: 5Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteMany
            persistentVolumeReclaimPolicy: Recycle
            storageClassName: local-storage
            local:
              path: /other/chater-ui
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon"

    - name: Create chater PersistentVolumeClaim
      kubernetes.core.k8s:
        state: present
        namespace: chater-ui
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: chater-ui-pvc
            namespace: chater-ui
          spec:
            storageClassName: local-storage
            accessModes:
              - ReadWriteMany
            resources:
              requests:
                storage: 5Gi
    - name: Create local directory for chater
      ansible.builtin.file:
        path: /other/chater-ui
        state: directory
        mode: '0755'
    - name: Create eater PersistentVolume
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: eater-ui-pv
          spec:
            capacity:
              storage: 20Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteMany
            persistentVolumeReclaimPolicy: Recycle
            storageClassName: shared-storage
            local:
              path: /other/eater_storage
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon"

    - name: Create eater PersistentVolumeClaim
      kubernetes.core.k8s:
        state: present
        namespace: chater-ui
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: eater-ui-pvc
            namespace: chater-ui
          spec:
            storageClassName: shared-storage
            accessModes:
              - ReadWriteMany
            resources:
              requests:
                storage: 20Gi
            volumeName: eater-ui-pv
    - name: Create local directory for eater
      ansible.builtin.file:
        path: /other/eater_storage
        state: directory
        mode: '0755'
    - name: Create secret for environment variables
      kubernetes.core.k8s:
        state: present
        namespace: chater-ui
        kind: Secret
        name: chater-ui
        resource_definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: chater-ui
            namespace: chater-ui
          data:
            USERNAME: "{{ vars.USER | b64encode }}"
            PASSWORD_HASH: "{{ vars.PASSWORD | b64encode }}"
            SECRET_KEY: "{{ vars.SECRET_KEY | b64encode }}"
    - name: Create gphoto PersistentVolume
      kubernetes.core.k8s:
        state: present
        namespace: chater-ui
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: gphoto-chater-ui-pvc
            namespace: chater-ui
          spec:
            capacity:
              storage: 10Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteMany
            persistentVolumeReclaimPolicy: Recycle
            storageClassName: local-storage
            local:
              path: /other_hdd/gphoto
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon"
    - name: Create chater PersistentVolumeClaim
      kubernetes.core.k8s:
        state: present
        namespace: chater-ui
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: gphoto-chater-ui-pvc
            namespace: chater-ui
          spec:
            storageClassName: local-storage
            accessModes:
              - ReadWriteMany
            resources:
              requests:
                storage: 10Gi