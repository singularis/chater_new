- name: Deploy Kubernetes objects for eater application
  hosts: localhost
  gather_facts: no

  vars_files:
    - ../vars.yaml

  tasks:
    - name: Create eater Namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: eater
    - name: Deploy eater Deployment
      kubernetes.core.k8s:
        state: present
        namespace: eater
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: eater
            namespace: eater
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: eater
            template:
              metadata:
                labels:
                  app: eater
                annotations:
                  co.elastic.logs/enabled: "true"
              spec:
                initContainers:
                  - name: eater-init-db
                    imagePullPolicy: Always
                    image: docker.io/singularis314/eater-init:0.1
                    env:
                      - name: POSTGRES_USER
                        value: "{{ vars.EATER.DB_NAME }}"
                      - name: POSTGRES_PASSWORD
                        valueFrom:
                          secretKeyRef:
                            name: "{{ vars.EATER.DB_PASSWORD }}"
                            key: password
                      - name: POSTGRES_DB
                        value: "{{ vars.EATER.DB_NAME }}"
                      - name: POSTGRES_HOST
                        value: "{{ vars.EATER.POSTGRES_HOST }}"
                containers:
                  - name: eater
                    image: docker.io/singularis314/eater:0.1
                    imagePullPolicy: Always
                    env:
                      - name: BOOTSTRAP_SERVER
                        value: "{{ vars.BOOTSTRAP_SERVER }}"
                      - name: POSTGRES_USER
                        value: "{{ vars.EATER.DB_NAME }}"
                      - name: POSTGRES_PASSWORD
                        valueFrom:
                          secretKeyRef:
                            name: "{{ vars.EATER.DB_PASSWORD }}"
                            key: password
                      - name: POSTGRES_DB
                        value: "{{ vars.EATER.DB_NAME }}"
                      - name: POSTGRES_HOST
                        value: "{{ vars.EATER.POSTGRES_HOST }}"
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/hostname
                              operator: In
                              values:
                                - racoon
                                - racoon-gpu